// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.166.1/containers/python-3
{
	"name": "Python 3",
	"image": "endjin.azurecr.io/mdp/spark-sandbox-3.4.1:2.0.7",
	"customizations": {
		"vscode": {
			"settings": {
				"terminal.integrated.profiles.linux": {
					"pwsh": {
						"path": "/opt/microsoft/powershell/7/pwsh",
						"args": [
							"-noexit",
							"-file",
							"${containerWorkspaceFolder}/.venv/bin/Activate.ps1"
						]
					}
				},
				"files.exclude": {
					"**/__pycache__": true,
					".pytest_cache": true,
					".mypy_cache": true
				},
				"python.defaultInterpreterPath": "./.venv/bin/python",
				"python.pythonPath": "./.venv/bin/python",
				"python.languageServer": "Pylance",
				"editor.formatOnSave": true,
				"python.testing.pytestEnabled": true,
				"python.terminal.activateEnvironment": true,
				"python.experiments.optInto": [
					"pythonTerminalEnvVarActivation"
				],
				"python.analysis.inlayHints.variableTypes": true,
				"python.analysis.autoFormatStrings": true,
				"python.analysis.autoImportCompletions": false,
				"python.analysis.completeFunctionParens": false,
				"python.analysis.importFormat": "relative",
				"python.analysis.typeCheckingMode": "standard",
				"python.analysis.inlayHints.functionReturnTypes": true,
				"python.analysis.diagnosticSeverityOverrides": {
					"reportUnknownParameterType": "error",
					"reportUnknownArgumentType": "error"
				},
				// black-formatter.path property does not seem to sync properly inside the [python] Language-Specific Editor Settings, so have to define it outside.
				"black-formatter.path": [
					"./.venv/bin/black"
				],
				"isort.path": [
					"./.venv/bin/isort"
				],
				"mypy-type-checker.interpreter": [
					"./.venv/bin/python"
				],
				// After building the container, often the Language-Specific Editor Settings defined here don't take effect
				// until you perform a manual 'Reload Window' from the Command Palette.
				// Sometimes, as in the case of the 'black-formatter.path' property, the settings don't sync properly even after doing this,
				// so you have to define them at the level above, at the top level of the 'settings' property. 
				"[python]": {
					"editor.defaultFormatter": "ms-python.black-formatter",
					"editor.codeActionsOnSave": {
						"source.organizeImports": "always"
					},
					"editor.rulers": [
						120
					],
					"rewrap.wrappingColumn": 120,
					"rewrap.autoWrap.enabled": true
				},
				"jupyter.notebookFileRoot": "${containerWorkspaceFolder}"
			},
			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				"ms-python.python",
				"ms-python.vscode-pylance",
				"ms-toolsai.jupyter",
				"mechatroner.rainbow-csv",
				"janisdd.vscode-edit-csv",
				"ms-azuretools.vscode-docker",
				"ms-vscode.PowerShell",
				"tamasfe.even-better-toml",
				"GrapeCity.gc-excelviewer",
				"stkb.rewrap",
				"jimasp.behave-vsc@0.6.4",
				"alexkrechik.cucumberautocomplete",
				"ms-python.flake8",
				"GitHub.vscode-github-actions",
				"ms-vsliveshare.vsliveshare",
				"ms-python.black-formatter",
				"redhat.vscode-xml",
				"ms-toolsai.datawrangler"
			]
		}
	},
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [
		// Make handful of Spark UI ports (one per app) available via http://localhost:<port>
		4040,
		4041,
		4042,
		4043,
		4044
	],
	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "poetry install",
	// The default here seems to have flipped, commenting-out 'remoteUser' no longer causes the container
	// to run as 'root', instead it ran as the non-privileged 'vscode' user which didn't have access
	// to where 'poetry' is installed and potentially other tools too.
	// More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "root"
}